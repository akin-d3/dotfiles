call plug#begin('~/.vim/plugged')

set rnu
set nu
set clipboard=unnamed
" set clipboard=unnamedplus
set statusline+=%F
set path +=autoload
set path +=**
set wildmenu
set tags=tags
" split panel
set splitbelow
set splitright
" ctrlp setting
set wildmode=longest,list
set wildignore+=*.a,*.o
set wildignore+=*.DS_Store,.git,.hg,.svn
set wildignore+=*~,*.swp,*.tmp
set wildignore+=*.bmp,*.jpg,*.png,*.gif,*.ico
set wildignore+=*.pyc,*.pyo,*.pyd
set nocompatible " be iMproved, required

filetype on" required
filetype plugin indent on " required

let mapleader = ','
" let g:rehash256 = 1

nnoremap Y y$
nnoremap V v$

" NERDTree setting 
" autocmd vimenter * NERDTree
map <C-t> :NERDTreeToggle<CR>

" map settings 
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
nmap <C-\>\ <C-w>v
nmap <C-\>= <C-w>s
" map <C-b> :browse oldfiles<CR> 
map <C-n> <C-e>
map <C-p> <C-y>

nmap <leader><tab> <plug>(fzf-maps-n)
xmap <leader><tab> <plug>(fzf-maps-x)
omap <leader><tab> <plug>(fzf-maps-o)
nnoremap <silent> <leader>o :FzfFiles<CR>
nnoremap <silent> <leader>O :FzfFiles!<CR>
nnoremap <silent> <leader>k :FzfFiles ** <CR>
nnoremap <silent> <leader>h :FzfHistory<CR>
nnoremap <silent> <leader>: :FzfHistory:<CR>
nnoremap <silent> <leader>/ :FzfHistory/<CR>
nnoremap <silent> <leader>b :FzfBuffers<CR>
nnoremap <silent> <leader>; :FzfCommands<CR>
nnoremap <silent> <leader>l :FzfBlines<CR>
nnoremap <silent> <leader>m :FzfMarks<CR>
nnoremap <silent> <leader>s :FzfSnippets<CR>
nnoremap <silent> <F1> :FzfHelptags<CR>
nnoremap <silent> <leader>r :FzfRg<CR>
inoremap <silent> <F1><ESC> :FzfHelptags<CR>
nnoremap <silent> <leader>T :FzfTags<CR>
nnoremap <silent> <leader>t :FzfBTags<CR>

" Insert mode completion
imap <c-x><c-k> <plug>(fzf-complete-word)
imap <c-x><c-f> <plug>(fzf-complete-path)
imap <c-x><c-j> <plug>(fzf-complete-file-ag)
imap <c-x><c-l> <plug>(fzf-complete-line)

" Advanced customization using Vim function
inoremap <expr> <c-x><c-k> fzf#vim#complete#word({'left': '15%'})



Plug 'preservim/nerdtree'

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
let g:fzf_command_prefix = 'Fzf'
let g:fzf_layout = { 'window': { 'width': 0.7, 'height': 0.5, 'highlight': 'Todo', 'border': 'sharp' } }


let g:python3_host_prog="/usr/bin/python3"
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
let g:deoplete#enable_at_startup = 1
let g:deoplete#auto_complete=1
let g:deoplete#sources#jedi#enable_typeinfo = 0 "gotta go fast
autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif "automatically closing the scratch window at the top of the vim window on finishing a complete or leaving insert

Plug 'Shougo/denite.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'tpope/vim-fugitive'
Plug 'vim-syntastic/syntastic'
Plug 'tpope/vim-sensible'

Plug 'SirVer/ultisnips'
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsEditSplit="vertical"

Plug 'honza/vim-snippets'
Plug 'tomasr/molokai'
call plug#end()

set termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"

" let g:molokai_original = 1
colorscheme molokai
" set backgroud transparency
hi Normal guibg=NONE ctermbg=NONE
" set background=dark
" set Vim-specific sequences for RGB colors
"
